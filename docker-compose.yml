version: "3"

services:
  caddy:
    image: caddy
    ports:
      - "80:80"
      - "443:443"
      - "2019:2019"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      # - ./data/caddy:/data
      # - ./data/caddy/config:/config
      # - ./data/caddy/data:/data
      # - ./data/caddy/tls:/tls

  minio:
    image: quay.io/minio/minio:latest
    environment:
      MINIO_ROOT_USER: administrator
      MINIO_ROOT_PASSWORD: administrator
      MINIO_SERVER_URL: "http://localhost:9000"
    command: server --console-address ":9001" /data
    ports:
      - "9000:9000" # service
      - "9001:9001" # web

  minio-init:
    depends_on:
      - minio
    image: minio/mc
    volumes:
      - ./shared:/mnt/shared
    entrypoint: >
      /bin/sh -c "
      echo [INFO] Setup connection to MinIO;
      mc alias set myminio http://minio:9000 administrator administrator;
      mc admin info myminio;

      echo [INFO] Create default buckets;
      mc mb --ignore-existing --with-versioning myminio/public;
      mc mb --ignore-existing --with-versioning myminio/internal;
      mc mb --ignore-existing --with-versioning myminio/private;
      mc anonymous set download myminio/public;

      echo [INFO] Cleanup buckets;
      mc rm --recursive --force --dangerous myminio/public;
      mc rm --recursive --force --dangerous myminio/internal;
      mc rm --recursive --force --dangerous myminio/private;

      echo [INFO] Uploading files;
      mc cp --recursive /mnt/shared/public/* myminio/public;
      mc cp --recursive /mnt/shared/internal/* myminio/internal;
      mc cp --recursive /mnt/shared/private/* myminio/private;
      exit 0;
      "

  ssh-server:
    image: ssh-server
    build:
      context: .
      dockerfile: Dockerfile
      args:    
        USER_NAME: "root"
        USER_PASS: "pass"
    ports:
      - "9200:22"
  
  postgres:
    image: postgis/postgis
    ports:
      - 5432:5432
    environment:
      TZ: "Asia/Tokyo"
      POSTGRES_DB: postgres
      PGPASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
      # POSTGRES_HOST_AUTH_METHOD: trust
    # psql -h localhost -p 5432 -U postgres -d postgres
  
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper

  # meilisearch:
  #   image: getmeili/meilisearch:latest
  #   ports:
  #     - 7700:7700
  #   environment:
  #     MEILI_MASTER_KEY: "masterKey"
  